@model Project_Management_Tool.Models.tb_UserInfo
@{
	ViewBag.Title = "User_Info";
}
<h2 align="center"><u><b>User Information Entry</b></u></h2>
@using (Html.BeginForm("UserInfo", "Home", FormMethod.Post))
{
	@Html.AntiForgeryToken()
	if (ViewBag.Massage != null)
	{
		<p>@ViewBag.Massage</p>
	}
	<div class="form-horizontal">
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		<div class="form-group">
			@Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Email, new { htmlAttributes = new { id = "txtEmail", @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.DefaultPassword, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.DefaultPassword, new { htmlAttributes = new { id = "txtDefaultPassword", @class = "form-control", onfocus = "blur()" } })
				@Html.ValidationMessageFor(model => model.DefaultPassword, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				<div class="col-md-6">
					<div class="col-md-3">
						<label>
							@Html.RadioButtonFor(model => model.Status, true, new { @class = "radio-inline", id = "" })
							<span>Active</span>
						</label>
					</div>
					<div class="col-md-4">
						<label>
							@Html.RadioButtonFor(model => model.Status, false, new { @class = "radio-inline", id = "" })
							<span>Inactive</span>
						</label>
					</div>
				</div>
			</div>
			@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
		</div>
		<div class="form-group">
			@Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Designation, ViewBag.Designations as SelectList, "---Select Designation---", new { id = "ddlOperationType", @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
			</div>
		</div>
		<div class="form-group">
			<div class="col-md-offset-4 col-md-12">
				<div class="col-md-3">
					<div class="col-md-3">
						<input type="submit" value="Save" class="btn btn-primary">
					</div>
				</div>
			</div>
		</div>
	</div>
}
@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$('#txtEmail').change(function () {
			var catchEmail = $('#txtEmail').val();
			$('#txtDefaultPassword').val(catchEmail + '123');
		});
	</script>
}
